import numpy as np

# ROTATING CENTER CIRCLE BY 9 DEGREES CLOCKWISE
# dst = np.array([960 + 21.90082511, 400 + 1.7236323, # tc
#                 960 - 21.90082511, 680 - 1.7236323, # bc
#                 820 + 1.7236323, 540 - 21.90082511, # lc
#                 1100 - 1.7236323, 540 + 21.90082511, # rc
# ]).reshape((4, 2))

# midfield
# src = np.array([959, 465, # tc
#                 959, 650, # bc
#                 608, 552, # lc
#                 1310, 552, # rc
#                 785, 291, # tl
#                 1132, 291, # tr
#                 616, 1066, # bl
#                 1303, 1066, # br
# ]).reshape((8, 2))

# dst = np.array([960, 400, # tc
#                 960, 680, # bc
#                 820, 540, # lc
#                 1100, 540, # rc
#                 870, 15,
#                 1050, 15,
#                 870, 1065,
#                 1050, 1065
# ]).reshape((8, 2))

# <ProjectiveTransform(matrix=
#     [[ 8.33519727e-01,  1.93684006e+00,  1.61288507e+02],
#      [ 1.43620104e-05,  4.30087726e+00, -1.22802498e+03],
#      [ 2.09970635e-08,  2.01857912e-03,  1.00000000e+00]])>

Hc = np.array([[ 8.33519727e-01,  1.93684006e+00,  1.61288507e+02],
     [ 1.43620104e-05,  4.30087726e+00, -1.22802498e+03],
     [ 2.09970635e-08,  2.01857912e-03,  1.00000000e+00]])

# annot Hc = [[0.83, 1.94, 161.29],
#             [0, 4.30, -1228.02],
#             [0, 0, 1]]

# right_end
# src = np.array([807, 410, # tl
#                 1290, 383, # tr
#                 1171, 795, # bl
#                 1853, 741, # br
# ]).reshape((4, 2))

# dst = np.array([1500, 280, # tl
#                 1750, 280, # tr
#                 1500, 800, # bl
#                 1750, 800, # br
# ]).reshape((4, 2))

# <ProjectiveTransform(matrix=
#     [[ 9.73749489e-01,  2.61432135e+00,  1.10399484e+03],
#      [ 2.12154164e-01,  4.35152471e+00, -1.40248615e+03],
#      [ 1.96328735e-05,  2.33807617e-03,  1.00000000e+00]])>

Hr = np.array(
    [[ 9.73749489e-01,  2.61432135e+00,  1.10399484e+03], # position 0, 2 is important here, this will align endlines when added to Hc
     [ 2.12154164e-01,  4.35152471e+00, -1.40248615e+03], # position 1, 0 is important here, this will align sidelines when added to Hc
     [ 1.96328735e-05,  2.33807617e-03,  1.00000000e+00]])

zero_two = 1.10399484e+03 - 1.61288507e+02
one_zero = 2.12154164e-01 - 1.43620104e-05
y_offset = 250
# this actually worked
Hl_guess = np.array(
    [[ 8.33519727e-01,  1.93684006e+00,  1.61288507e+02 - zero_two],
     [ 1.43620104e-05 - one_zero,  4.30087726e+00, -1.22802498e+03 + y_offset],
     [ 2.09970635e-08,  2.01857912e-03,  1.00000000e+00]]
)


